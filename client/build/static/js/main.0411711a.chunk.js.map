{"version":3,"sources":["logo.svg","Calc.js","App.js","reportWebVitals.js","index.js"],"names":["Calc","useState","people","maxPeople","day","maxDay","peoplePrice","allprice","salePrice","additionPrice","state","setState","calcSale","price","count","Math","floor","totalSale","Array","fill","reduce","total","el","prevState","toFixed","checkAction","e","val","parseInt","target","value","contion","checked","className","name","placeholder","onChange","isNaN","onBlur","trim","type","min","max","defaultValue","for","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0411711a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useRef, useState} from 'react';\r\n\r\nexport default function Calc(){\r\n    const [state,setState] = useState({\r\n        people: 10000,\r\n        maxPeople: 100000,\r\n        day: 1,\r\n\t\tmaxDay: 180,\r\n        peoplePrice: 0.01,\r\n        allprice: (10000 * 0.01) * 1,\r\n        salePrice: 0,\r\n        additionPrice: 0\r\n    })\r\n\r\n\r\n    const calcSale = (price, day) => {\r\n        const sale = .95;\r\n        const count =  Math.floor(day / 10);\r\n        const totalSale = Array(count).fill(\"\").reduce((total, el) => {\r\n            return total * sale\r\n        },price)\r\n        setState((prevState) => {\r\n            return {...prevState, salePrice: totalSale.toFixed(1)}\r\n        })\r\n    }\r\n    \r\n\r\n    const fnpeople = (e) => {\r\n        const val = parseInt(e.target.value);\r\n        const {peoplePrice, day} = state;\r\n        \r\n        setState((prevState) => {\r\n\t\t\t\t\tcalcSale((val * peoplePrice) * val, day)\r\n          return {...prevState, allprice: ((val * peoplePrice) * day).toFixed(1), people:  val}\r\n        })\r\n    } \r\n\r\n    const fnday = (e) => {\r\n        const val = parseInt(e.target.value)\r\n        const {peoplePrice, people} = state;\r\n\r\n        setState((prevState) => {\r\n            calcSale((people * peoplePrice) * val, val)\r\n            return {...prevState, allprice: (people * peoplePrice) * val, day: val }\r\n        })\r\n    } \r\n\r\n    const checkAction = (e) => {\r\n        const val = parseInt(e.target.value)\r\n        const contion = e.target.checked;\r\n        contion ?  setState((prevState) => {return {...prevState, additionPrice: parseInt(prevState.additionPrice) + val} }) :  setState((prevState) => {return {...prevState, additionPrice: parseInt(prevState.additionPrice) - val} })\r\n    }\r\n\r\n    const newCounMaxPeople = (e) => {\r\n        const val = parseInt(e.target.value);\r\n        if(isNaN(val)) setState((prevState) => {return {...prevState, maxPeople: 100000} })\r\n        if(val > 1000) setState((prevState) => {return {...prevState, maxPeople: val} })\r\n    }\r\n\r\n    const newCounMaxEmpty = (e) => {\r\n        const val = e.target.value;\r\n        if(val.trim() === \"\") setState((prevState) => {return {...prevState, maxPeople: 100000} });\r\n\t\t\t\te.target.value = \"\"\r\n    }\r\n\r\n\t\tconst newCounMaxDay = (e) => {\r\n\t\t\tconst val = parseInt(e.target.value);\r\n\t\t\tif(isNaN(val)) setState((prevState) => {return {...prevState, maxDay: 180} })\r\n\t\t\tif(val > 1) setState((prevState) => {return {...prevState, maxDay: val} })\r\n\t\t}\r\n\r\n\t\tconst newCounMaxDayBlur = (e) => {\r\n\t\t\tconst val = e.target.value;\r\n\t\t\tif(val.trim() === \"\") setState((prevState) => {return {...prevState, maxDay: 180} });\r\n\t\t\te.target.value = \"\"\r\n\t\t}\r\n\r\n\r\n    return  (\r\n    <div className=\"calc-section\">\r\n\r\n        <div className=\"s-input\">\r\n\r\n            <span className=\"s-input__start\">min:10000</span>\r\n            <span>\r\n                Люди \r\n                <input className=\"line__appendLine\" name=\"newcountPeople\" placeholder=\"введите число выше 100000\" onChange={newCounMaxPeople} onBlur={newCounMaxEmpty}/>\r\n            </span> \r\n            <input className=\"line__input\" name=\"people\" type=\"range\" min=\"10000\" max={state.maxPeople} onChange={fnpeople}/>\r\n            <span className=\"count\" >{state.people}</span>\r\n            \r\n        </div>\r\n        \r\n        <div className=\"s-input\">\r\n            <span className=\"s-input__start\">min:1</span>\r\n            <span>\r\n\t\t\t\t\t\t\tДни\r\n\t\t\t\t\t\t\t<input className=\"line__appendLine\" name=\"newcountDay\" placeholder=\"Введите дни не меньше 1\" onChange={newCounMaxDay} onBlur={newCounMaxDayBlur}/>\r\n\t\t\t\t\t\t</span>\r\n            <input className=\"line__input\" name=\"day\" type=\"range\" min=\"1\" max={state.maxDay} defaultValue=\"1\" onChange={fnday}/>\r\n            <span className=\"count\" >{state.day}</span>\r\n        </div>\r\n\r\n        <div className=\"s-input s-input--checkbox\">\r\n            <label for=\"50\">\r\n                50\r\n                <input onChange={checkAction} className=\"checkbox-price\" name=\"50\" type=\"checkbox\" value=\"50\"/>\r\n            </label>\r\n            <label for=\"100\">\r\n                100\r\n                <input onChange={checkAction} className=\"checkbox-price\" name=\"100\" type=\"checkbox\" value=\"100\"/>\r\n            </label>\r\n            <label for=\"200\">\r\n                200\r\n                <input onChange={checkAction} className=\"checkbox-price\" name=\"200\" type=\"checkbox\" value=\"200\"/>\r\n            </label>\r\n        </div>\r\n\r\n\r\n        <div className=\"show-result\">in day: { state.day < 10 ? (state.allprice / state.day).toFixed(1) : (state.salePrice / state.day).toFixed(1)}</div>\r\n        <div className=\"show-result\"><span className=\"result_field\">result:</span>\r\n            {state.day < 10 ? <span>{(+state.allprice + state.additionPrice).toFixed(1)}$</span> : <><span className=\"sale\" >{(+state.allprice + state.additionPrice).toFixed(1)}$</span><span>{(+state.salePrice + state.additionPrice).toFixed(1)}$</span></>  } \r\n        </div>\r\n        \r\n\r\n    </div>)\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Calc from './Calc';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Calc/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}